import{S as w,i as b,s as S,d,v as z,n as E,p as L,q as P,l as h,r as g,a3 as f,w as j,g as G,F as p,A as R,B as k,C as B,k as O,t as q,D as A}from"./index-5511dae7.js";const I="node_modules/.pnpm/svelte-loading-spinners@0.3.4/node_modules/svelte-loading-spinners/GoogleSpin.svelte";function y(i){let e,t;const r={c:function(){e=E("div"),this.h()},l:function(l){e=L(l,"DIV",{class:!0,style:!0}),P(e).forEach(h),this.h()},h:function(){g(e,"class","spinner spinner--google s-one6hcrEqXxY"),g(e,"style",t="--duration: "+i[0]+"; "+i[2]),f(e,"pause-animation",i[1]),j(e,I,7,0,165)},m:function(l,n){G(l,e,n)},p:function(l,[n]){n&5&&t!==(t="--duration: "+l[0]+"; "+l[2])&&g(e,"style",t),n&2&&f(e,"pause-animation",l[1])},i:p,o:p,d:function(l){l&&h(e)}};return d("SvelteRegisterBlock",{block:r,id:y.name,type:"component",source:"",ctx:i}),r}function J(i,e,t){let r,{$$slots:_={},$$scope:l}=e;z("GoogleSpin",_,[]);let{size:n="40px"}=e,{duration:c="3s"}=e,{pause:a=!1}=e;const u=["size","duration","pause"];return Object.keys(e).forEach(o=>{!~u.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<GoogleSpin> was created with unknown prop '${o}'`)}),i.$$set=o=>{"size"in o&&t(3,n=o.size),"duration"in o&&t(0,c=o.duration),"pause"in o&&t(1,a=o.pause)},i.$capture_state=()=>({size:n,duration:c,pause:a,styles:r}),i.$inject_state=o=>{"size"in o&&t(3,n=o.size),"duration"in o&&t(0,c=o.duration),"pause"in o&&t(1,a=o.pause),"styles"in o&&t(2,r=o.styles)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),i.$$.update=()=>{i.$$.dirty&8&&t(2,r=[`width: ${n}`,`height: ${n}`].join(";"))},[c,a,r,n]}class C extends w{constructor(e){super(e),b(this,e,J,y,S,{size:3,duration:0,pause:1}),d("SvelteRegisterComponent",{component:this,tagName:"GoogleSpin",options:e,id:y.name})}get size(){throw new Error("<GoogleSpin>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set size(e){throw new Error("<GoogleSpin>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get duration(){throw new Error("<GoogleSpin>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set duration(e){throw new Error("<GoogleSpin>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get pause(){throw new Error("<GoogleSpin>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set pause(e){throw new Error("<GoogleSpin>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}const N="src/lib/UI/Widgets/Loader.svelte";function v(i){let e,t,r;t=new C({props:{size:i[0]+"rem"},$$inline:!0});const _={c:function(){e=E("div"),R(t.$$.fragment),this.h()},l:function(n){e=L(n,"DIV",{style:!0,class:!0});var c=P(e);k(t.$$.fragment,c),c.forEach(h),this.h()},h:function(){g(e,"style",i[1]),g(e,"class","s-4gJQN87VSfmz"),j(e,N,11,0,315)},m:function(n,c){G(n,e,c),B(t,e,null),r=!0},p:function(n,[c]){const a={};c&1&&(a.size=n[0]+"rem"),t.$set(a),(!r||c&2)&&g(e,"style",n[1])},i:function(n){r||(O(t.$$.fragment,n),r=!0)},o:function(n){q(t.$$.fragment,n),r=!1},d:function(n){n&&h(e),A(t)}};return d("SvelteRegisterBlock",{block:_,id:v.name,type:"component",source:"",ctx:i}),_}function V(i,e,t){let{$$slots:r={},$$scope:_}=e;z("Loader",r,[]);let{size:l=3}=e,{top:n=0}=e,{right:c=0}=e,{bottom:a=0}=e,{left:u=0}=e,o=[n,c,a,u],m="";const D=["size","top","right","bottom","left"];return Object.keys(e).forEach(s=>{!~D.indexOf(s)&&s.slice(0,2)!=="$$"&&s!=="slot"&&console.warn(`<Loader> was created with unknown prop '${s}'`)}),i.$$set=s=>{"size"in s&&t(0,l=s.size),"top"in s&&t(2,n=s.top),"right"in s&&t(3,c=s.right),"bottom"in s&&t(4,a=s.bottom),"left"in s&&t(5,u=s.left)},i.$capture_state=()=>({GoogleSpin:C,size:l,top:n,right:c,bottom:a,left:u,padding:o,style:m}),i.$inject_state=s=>{"size"in s&&t(0,l=s.size),"top"in s&&t(2,n=s.top),"right"in s&&t(3,c=s.right),"bottom"in s&&t(4,a=s.bottom),"left"in s&&t(5,u=s.left),"padding"in s&&t(6,o=s.padding),"style"in s&&t(1,m=s.style)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),t(1,m=`padding: ${o.map(s=>`${s}rem`).join(" ")};`),[l,m,n,c,a,u]}class U extends w{constructor(e){super(e),b(this,e,V,v,S,{size:0,top:2,right:3,bottom:4,left:5}),d("SvelteRegisterComponent",{component:this,tagName:"Loader",options:e,id:v.name})}get size(){throw new Error("<Loader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set size(e){throw new Error("<Loader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get top(){throw new Error("<Loader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set top(e){throw new Error("<Loader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get right(){throw new Error("<Loader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set right(e){throw new Error("<Loader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get bottom(){throw new Error("<Loader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set bottom(e){throw new Error("<Loader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get left(){throw new Error("<Loader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set left(e){throw new Error("<Loader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{U as L};
