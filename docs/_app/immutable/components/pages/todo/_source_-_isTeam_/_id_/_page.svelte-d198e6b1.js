import{S as w,i as h,d as l,s as b,ag as p,ak as P,A as C,B as j,C as k,al as E,k as T,t as S,D as y,v as B}from"../../../../../chunks/index-5511dae7.js";import{C as g}from"../../../../../chunks/ContentContainer-fc93a2cb.js";function d(n){let e,r,m;function f(s){n[5](s)}let a={errors:n[0],source:n[2],isTeam:n[3]};n[1]!==void 0&&(a.content=n[1]),e=new g({props:a,$$inline:!0}),p.push(()=>P(e,"content",f));const i={c:function(){C(e.$$.fragment)},l:function(o){j(e.$$.fragment,o)},m:function(o,c){k(e,o,c),m=!0},p:function(o,[c]){const u={};c&1&&(u.errors=o[0]),c&4&&(u.source=o[2]),c&8&&(u.isTeam=o[3]),!r&&c&2&&(r=!0,u.content=o[1],E(()=>r=!1)),e.$set(u)},i:function(o){m||(T(e.$$.fragment,o),m=!0)},o:function(o){S(e.$$.fragment,o),m=!1},d:function(o){y(e,o)}};return l("SvelteRegisterBlock",{block:i,id:d.name,type:"component",source:"",ctx:n}),i}function D(n,e,r){let{$$slots:m={},$$scope:f}=e;B("Page",m,[]);let{data:a}=e,{errors:i}=e,{todo:s,source:o,isTeam:c}=a;n.$$.on_mount.push(function(){a===void 0&&!("data"in e||n.$$.bound[n.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'"),i===void 0&&!("errors"in e||n.$$.bound[n.$$.props.errors])&&console.warn("<Page> was created without expected prop 'errors'")});const u=["data","errors"];Object.keys(e).forEach(t=>{!~u.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Page> was created with unknown prop '${t}'`)});function _(t){s=t,r(1,s),r(4,a)}return n.$$set=t=>{"data"in t&&r(4,a=t.data),"errors"in t&&r(0,i=t.errors)},n.$capture_state=()=>({ContentContainer:g,data:a,errors:i,todo:s,source:o,isTeam:c}),n.$inject_state=t=>{"data"in t&&r(4,a=t.data),"errors"in t&&r(0,i=t.errors),"todo"in t&&r(1,s=t.todo),"source"in t&&r(2,o=t.source),"isTeam"in t&&r(3,c=t.isTeam)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),n.$$.update=()=>{n.$$.dirty&16&&r(1,{todo:s,source:o,isTeam:c}=a,s,(r(2,o),r(4,a)),(r(3,c),r(4,a)))},[i,s,o,c,a,_]}class q extends w{constructor(e){super(e),h(this,e,D,d,b,{data:4,errors:0}),l("SvelteRegisterComponent",{component:this,tagName:"Page",options:e,id:d.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(e){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get errors(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set errors(e){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{q as default};
