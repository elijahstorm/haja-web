import{S as g,i as _,d as l,s as w,ag as h,ak as p,A as b,B as P,C as v,al as C,k as j,t as k,D as y,v as E}from"../../../../chunks/index-5511dae7.js";import{C as f}from"../../../../chunks/ContentContainer-fc93a2cb.js";function d(n){let t,a,i;function m(o){n[3](o)}let s={errors:n[0],isTeam:!0};n[1]!==void 0&&(s.content=n[1]),t=new f({props:s,$$inline:!0}),h.push(()=>p(t,"content",m));const c={c:function(){b(t.$$.fragment)},l:function(r){P(t.$$.fragment,r)},m:function(r,u){v(t,r,u),i=!0},p:function(r,[u]){const e={};u&1&&(e.errors=r[0]),!a&&u&2&&(a=!0,e.content=r[1],C(()=>a=!1)),t.$set(e)},i:function(r){i||(j(t.$$.fragment,r),i=!0)},o:function(r){k(t.$$.fragment,r),i=!1},d:function(r){y(t,r)}};return l("SvelteRegisterBlock",{block:c,id:d.name,type:"component",source:"",ctx:n}),c}function S(n,t,a){let{$$slots:i={},$$scope:m}=t;E("Page",i,[]);let{data:s}=t,{errors:c}=t,{team:o}=s;n.$$.on_mount.push(function(){s===void 0&&!("data"in t||n.$$.bound[n.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'"),c===void 0&&!("errors"in t||n.$$.bound[n.$$.props.errors])&&console.warn("<Page> was created without expected prop 'errors'")});const r=["data","errors"];Object.keys(t).forEach(e=>{!~r.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Page> was created with unknown prop '${e}'`)});function u(e){o=e,a(1,o),a(2,s)}return n.$$set=e=>{"data"in e&&a(2,s=e.data),"errors"in e&&a(0,c=e.errors)},n.$capture_state=()=>({ContentContainer:f,data:s,errors:c,team:o}),n.$inject_state=e=>{"data"in e&&a(2,s=e.data),"errors"in e&&a(0,c=e.errors),"team"in e&&a(1,o=e.team)},t&&"$$inject"in t&&n.$inject_state(t.$$inject),n.$$.update=()=>{n.$$.dirty&4&&a(1,{team:o}=s,o)},[c,o,s,u]}class O extends g{constructor(t){super(t),_(this,t,S,d,w,{data:2,errors:0}),l("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:d.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get errors(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set errors(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{O as default};
